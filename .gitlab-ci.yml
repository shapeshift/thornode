image: golang:1.13

cache:
  paths:
    - .cache

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: tcp://docker:2376

before_script:
  - mkdir -p .cache
  - export GOPATH="$CI_PROJECT_DIR/.cache"

stages:
  - test
  - build
  - smoke-test
  - push
  - deploy

unit_tests:
  stage: test
  tags:
    - thorchain
  except:
    - schedules
  coverage: '/total:\s+\(statements\)\s+(\d+.\d+\%)/'
  variables:
    SignerName: "statechain"
    SignerPasswd: "password"
  script:
    - make test-coverage
    - go tool cover -func=coverage.out
    - go tool cover -html=coverage.out -o coverage.html

lint_code:
  image: golangci/golangci-lint
  stage: test
  tags:
    - thorchain
  except:
    - schedules
  before_script:
    - go get mvdan.cc/gofumpt
  script:
    - make lint-verbose

# Build docker image
build-thornode:
  stage: build
  image: docker:stable
  tags:
    - thorchain
  only:
    - master # build mocknet image
    - testnet
    - chaosnet
    - mainnet
  services:
    - docker:19-dind
  before_script:
    - apk update
    - apk add python py-pip make git jq curl
    - make docker-gitlab-login
  script:
    - make docker-gitlab-build
    - make docker-gitlab-push

smoke-test:thornode:
  stage: smoke-test
  image: docker/compose:alpine-1.25.4
  tags:
    - thorchain
  services:
    - docker:19-dind
  variables:
  artifacts:
    when: on_failure
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./logs/
  before_script:
    - apk update
    - apk add git tree make
    - (git clone --single-branch -b $CI_COMMIT_BRANCH https://gitlab.com/thorchain/heimdall.git && make -C heimdall build) || git clone --single-branch -b master https://gitlab.com/thorchain/heimdall.git
    - (git clone --single-branch -b $CI_COMMIT_BRANCH https://gitlab.com/thorchain/midgard.git && cd midgard && make docker-gitlab-build && cd ..) || true
    - tree /certs
    - DOCKER_TLS_CERTDIR="/certs" make -C build/docker reset-mocknet-standalone
  except:
    - schedules
  environment:
    name: integration
  script:
    - make -C heimdall smoke
  after_script:
    - DOCKER_TLS_CERTDIR="/certs" ./scripts/docker_logs.sh

deploy:
  #stage: deploy
  image: docker/compose:alpine-1.25.4
  tags:
    - thorchain
  only:
    - schedules
  services:
    - docker:19-dind
  before_script:
    - apk add sudo jq python git py-pip make bash curl python-dev
    - pip install --upgrade pip && pip install awscli requests
    - make aws-ci-login
    - wget https://media.githubusercontent.com/media/binance-chain/node-binary/master/cli/testnet/0.6.2/linux/tbnbcli
    - chmod +x tbnbcli && mv tbnbcli /usr/local/bin/. && tbnbcli version
  script:
    - cd $CI_PROJECT_DIR/build/docker
    - bash aws_testnet.sh ci

deploy-lambda:
  image: python:3.7
  stage: deploy
  only:
    - master
  tags:
    - thorchain

  before_script:
    - python -V
    - apt-get update -y
    - apt install -y zip jq
    - pip install awscli --upgrade --user
    - export PATH=~/.local/bin:$PATH
    - aws --version
    - make aws-ci-login
    # lambda function directory
    - cd ./build/lambda

  variables:
    LAMBDA_NAME: "node-ip-list-update"
    S3_BUCKET: "seed.thorchain.info" # s3 bucket to store zip file.
    LAMBDA_RUNTIME: "python3.7"
    LAMBDA_ARN: "arn:aws:lambda:us-east-1:526267067157:function:node-ip-list-update"
    LAMBDA_HANDLER: "lambda_function.lambda_handler"

  script:
    - pip install -r requirements.txt -t .
    - zip -r code.zip . -x \*.pyc *.git*
    - aws s3 cp code.zip s3://$S3_BUCKET/code.zip
    - aws lambda list-functions --max-items 10
    - aws lambda update-function-code --function-name $LAMBDA_NAME --zip-file fileb://code.zip || aws lambda create-function --function-name $LAMBDA_NAME --runtime $LAMBDA_RUNTIME --role $LAMBDA_ARN --handler $LAMBDA_HANDLER --code S3Bucket=$S3_BUCKET,S3Key=code.zip --memory-size 1024
