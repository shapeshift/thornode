openapi: 3.0.0
info:
  title: Thornode API
  version: 1.99.0
  contact:
    email: devs@thorchain.org
  description: Thornode REST API.

########################################################################################
# Paths
########################################################################################

paths:
  # ------------------------------ health ------------------------------

  /thorchain/ping:
    get:
      operationId: ping
      tags:
        - Health
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Ping
                properties:
                  ping:
                    type: string
                    example: pong

  # ------------------------------ pools ------------------------------

  /thorchain/pool/{asset}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/asset"
    get:
      description: Returns the pool information for the provided asset.
      operationId: pool
      tags:
        - Pools
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoolResponse"

  /thorchain/pools:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns the pool information for all assets.
      operationId: pools
      tags:
        - Pools
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoolsResponse"

  # # ------------------------------ liquidity providers ------------------------------

  /thorchain/pool/{asset}/liquidity_provider/{address}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/asset"
      - $ref: "#/components/parameters/address"
    get:
      description: Returns the liquidity provider information for an address and asset.
      operationId: liquidityProvider
      tags:
        - Liquidity Providers
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiquidityProviderResponse"

  /thorchain/pool/{asset}/liquidity_providers:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/asset"
    get:
      description: Returns all liquidity provider information for an asset.
      operationId: liquidityProviders
      tags:
        - Liquidity Providers
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiquidityProviderResponse"

  # # ------------------------------ savers ------------------------------

  /thorchain/pool/{asset}/saver/{address}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/asset"
      - $ref: "#/components/parameters/address"
    get:
      description: Returns the saver position given then savers pool and address.
      operationId: saver
      tags:
        - Savers
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiquidityProviderResponse"

  /thorchain/pool/{asset}/savers:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/asset"
    get:
      description: Returns all savers for the savers pool.
      operationId: savers
      tags:
        - Savers
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiquidityProviderResponse"

  # ------------------------------ transactions ------------------------------

  /thorchain/tx/{hash}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/hash"
    get:
      description: Returns the observed transaction for a provided inbound or outbound hash.
      operationId: tx
      tags:
        - Transactions
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TxResponse"

  /thorchain/tx/{hash}/signers:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/hash"
    get:
      description: Returns the signers for a provided inbound or outbound hash.
      operationId: txSigners
      tags:
        - Transactions
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TxSignersResponse"

  # ------------------------------ nodes ------------------------------

  /thorchain/node/{address}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/address"
    get:
      description: Returns node information for the provided node address.
      operationId: node
      tags:
        - Nodes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeResponse"

  /thorchain/nodes:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns node information for all registered validators.
      operationId: nodes
      tags:
        - Nodes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodesResponse"

  # ------------------------------ vaults ------------------------------

  /thorchain/vaults/asgard:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns current asgard vaults.
      operationId: asgard
      tags:
        - Vaults
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultsResponse"

  /thorchain/vaults/yggdrasil:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns current yggdrasil vaults.
      operationId: yggdrasil
      tags:
        - Vaults
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultsResponse"

  /thorchain/vaults/{pubkey}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/pubkey"
    get:
      description: Returns the vault for the provided pubkey.
      operationId: vault
      tags:
        - Vaults
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultResponse"

  /thorchain/vaults/pubkeys:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns all pubkeys for current vaults.
      operationId: vaultPubkeys
      tags:
        - Vaults
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultPubkeysResponse"

  # ------------------------------ network ------------------------------

  /thorchain/network:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns network overview statistics.
      operationId: network
      tags:
        - Network
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkResponse"

  # ------------------------------ POL ------------------------------

  /thorchain/pol:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns protocol owned liquidity overview statistics.
      operationId: pol
      tags:
        - POL
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/POLResponse"

  /thorchain/inbound_addresses:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns the set of asgard addresses that should be used for inbound transactions.
      operationId: inboundAddresses
      tags:
        - Network
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InboundAddressesResponse"

  /thorchain/lastblock:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns the last block information for all chains.
      operationId: lastblock
      tags:
        - Network
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LastBlockResponse"

  /thorchain/lastblock/{chain}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/chain"
    get:
      description: Returns the last block information for the provided chain.
      operationId: lastblockChain
      tags:
        - Network
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LastBlockResponse"

  /thorchain/version:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns the network's current THORNode version, the network's next THORNode version, and the querier's THORNode version.
      operationId: version
      tags:
        - Network
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionResponse"

  /thorchain/constants:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns constant configuration, can be overridden by mimir.
      operationId: constants
      tags:
        - Network
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstantsResponse"

  /thorchain/ragnarok:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns a boolean indicating whether the chain is in ragnarok.
      operationId: ragnarok
      tags:
        - Network
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: false

  /thorchain/ban/{address}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/address"
    get:
      description: Returns the ban status for the provided node address.
      operationId: ban
      tags:
        - Network
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BanResponse"

  # ------------------------------ queue ------------------------------

  /thorchain/queue:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns queue statistics.
      operationId: queue
      tags:
        - Queue
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueueResponse"

  /thorchain/queue/scheduled:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns the scheduled queue.
      operationId: queueScheduled
      tags:
        - Queue
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduledResponse"

  /thorchain/queue/outbound:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns the outbound queue including estimated RUNE values.
      operationId: queueOutbound
      tags:
        - Queue
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutboundResponse"

  # ------------------------------ tss ------------------------------

  /thorchain/keysign/{height}:
    parameters:
      - $ref: "#/components/parameters/pathHeight"
    get:
      description: Returns keysign information for the provided height - the height being the first block a tx out item appears in the signed-but-unobserved outbound queue.
      operationId: keysign
      tags:
        - TSS
      responses: &keysign-response
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeysignResponse"

  /thorchain/keysign/{height}/{pubkey}:
    parameters:
      - $ref: "#/components/parameters/pathHeight"
      - $ref: "#/components/parameters/pubkey"
    get:
      description: Returns keysign information for the provided height and pubkey - the height being the block at which a tx out item is scheduled to be signed and moved from the scheduled outbound queue to the outbound queue.
      operationId: keysignPubkey
      tags:
        - TSS
      responses: *keysign-response

  # TODO: Deprecate?
  # /thorchain/keygen/{height}/{pubkey}:

  # ------------------------------ tss metrics ------------------------------

  /thorchain/metrics:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns keygen and keysign metrics for current vaults.
      operationId: metrics
      tags:
        - TSS
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsResponse"

  /thorchain/metric/keygen/{pubkey}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/pubkey"
    get:
      description: Returns keygen metrics for the provided vault pubkey.
      operationId: metricsKeygen
      tags:
        - TSS
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeygenMetricsResponse"

  # ------------------------------ thornames ------------------------------

  /thorchain/thorname/{name}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - name: name
        in: path
        description: the thornode to lookup
        required: true
        schema:
          type: string
    get:
      description: Returns addresses registered to the provided thorname.
      operationId: thorname
      tags:
        - Thornames
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThornameResponse"

  # ------------------------------ mimir ------------------------------

  /thorchain/mimir:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns current active mimir configuration.
      operationId: mimir
      tags:
        - Mimir
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MimirResponse"

  /thorchain/mimir/key/{key}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - name: key
        in: path
        description: the mimir key to lookup
        required: true
        schema:
          type: string
    get:
      description: Returns current active mimir configuration for the provided key.
      operationId: mimirKey
      tags:
        - Mimir
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64

  /thorchain/mimir/admin:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns current admin mimir configuration.
      operationId: mimirAdmin
      tags:
        - Mimir
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MimirResponse"

  /thorchain/mimir/nodes_all:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
    get:
      description: Returns current node mimir votes.
      operationId: mimirNodes
      tags:
        - Mimir
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MimirNodesResponse"

  /thorchain/mimir/node/{address}:
    parameters:
      - $ref: "#/components/parameters/queryHeight"
      - $ref: "#/components/parameters/address"
    get:
      description: Returns current node mimir configuration for the provided node address.
      operationId: mimirNode
      tags:
        - Mimir
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MimirResponse"

  # TODO: Deprecate?
  # /thorchain/mimir/nodes:

########################################################################################
# Components
########################################################################################

components:
  # ------------------------------ parameters ------------------------------

  parameters:
    queryHeight:
      name: height
      in: query
      description: optional block height, defaults to current tip
      required: false
      schema:
        type: integer
        format: int64
        minimum: 0

    pathHeight:
      name: height
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 0

    hash:
      name: hash
      in: path
      required: true
      schema:
        type: string
        example: "CF524818D42B63D25BBA0CCC4909F127CAA645C0F9CD07324F2824CC151A64C7"

    asset:
      name: asset
      in: path
      required: true
      schema:
        type: string
        example: "BTC.BTC"

    address:
      name: address
      in: path
      required: true
      schema:
        type: string
        example: "thor1zupk5lmc84r2dh738a9g3zscavannjy3nzplwt"

    pubkey:
      name: pubkey
      in: path
      required: true
      schema:
        type: string
        example: "thorpub1addwnpepq068dr0x7ue973drmq4eqmzhcq3650n7nx5fhgn9gl207luxp6vaklu52tc"

    chain:
      name: chain
      in: path
      required: true
      schema:
        type: string
        example: "BTC"

  # ------------------------------ schemas ------------------------------

  schemas:
    Pool:
      type: object
      required:
        - balance_rune
        - balance_asset
        - asset
        - LP_units
        - pool_units
        - status
        - synth_units
        - synth_supply
        - pending_inbound_rune
        - pending_inbound_asset
        - savers_depth
        - savers_units
      properties:
        balance_rune:
          type: string
          example: "13460619152985"
        balance_asset:
          type: string
          example: "3197744873"
        asset:
          type: string
          example: "BTC.BTC"
        LP_units:
          type: string
          description: the total pool liquidity provider units
          example: "14694928607473"
        pool_units:
          type: string
          description: the total pool units, this is the sum of LP and synth units
          example: "14694928607473"
        status:
          type: string
          example: "Available"
        decimals:
          type: integer
          format: int64
          example: 6
        synth_units:
          type: string
          description: the total synth units in the pool
          example: "0"
        synth_supply:
          type: string
          description: the total supply of synths for the asset
          example: "0"
        pending_inbound_rune:
          type: string
          example: "464993836"
        pending_inbound_asset:
          type: string
          example: "101713319"
        savers_depth:
          type: string
          example: "199998"
          description: the balance of L1 asset deposited into the Savers Vault
        savers_units:
          type: string
          example: "199998"
          description: the number of units owned by Savers

    LiquidityProvider:
      type: object
      required:
        - asset
        - units
        - pending_rune
        - pending_asset
        - rune_deposit_value
        - asset_deposit_value
      properties:
        asset:
          type: string
          example: "BNB.BNB"
        rune_address:
          type: string
          example: "thor1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
        asset_address:
          type: string
          example: "bnb1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
        last_add_height:
          type: integer
          format: int64
          example: 82745
        last_withdraw_height:
          type: integer
          format: int64
          example: 82745
        units:
          type: string
          example: "0"
        pending_rune:
          type: string
          example: "0"
        pending_asset:
          type: string
          example: "242000000"
        pending_tx_Id:
          type: string
          example: "C4C876802xxxxxxxxxxBC408829878446A37011EBBA0C5CAA3DD64A548879CB228"
        rune_deposit_value:
          type: string
          example: "0"
        asset_deposit_value:
          type: string
          example: "0"

    Coin:
      type: object
      required:
        - asset
        - amount
      properties:
        asset:
          type: string
          example: "BTC.BTC"
        amount:
          type: string
          example: "100000"
        decimals:
          type: integer
          format: int64
          example: 6

    Vault:
      type: object
      required:
        - coins
        - routers
        - addresses
      properties:
        block_height:
          type: integer
          format: int64
        pub_key:
          type: string
        coins:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
        type:
          type: string
          enum: ["AsgardVault", "YggdrasilVault"]
        status:
          type: string
          # TODO: Currently status is not consistent between asgard and yggdrasil.
          # enum: ["Active", ...]
        status_since:
          type: integer
          format: int64
        membership:
          type: array
          description: the list of node public keys which are members of the vault
          items:
            type: string
        chains:
          type: array
          items:
            type: string
        inbound_tx_count:
          type: integer
          format: int64
        outbound_tx_count:
          type: integer
          format: int64
        pending_tx_block_heights:
          type: array
          items:
            type: integer
            format: int64
        routers:
          type: array
          items:
            $ref: "#/components/schemas/VaultRouter"
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/VaultAddress"

    VaultRouter:
      type: object
      properties:
        chain:
          type: string
          example: "ETH"
        router:
          type: string
          example: "0x3624525075b88B24ecc29CE226b0CEc1fFcB6976"

    VaultAddress:
      type: object
      properties:
        chain:
          type: string
          example: "BTC"
        address:
          type: string
          example: "bc1qd45uzetakjvdy5ynjjyp4nlnj89am88e4e5jeq"

    VaultInfo:
      type: object
      required:
        - pub_key
        - routers
      properties:
        pub_key:
          type: string
          example: "thorpub1addwnpepq068dr0x7ue973drmq4eqmzhcq3650n7nx5fhgn9gl207luxp6vaklu52tc"
        routers:
          type: array
          items:
            $ref: "#/components/schemas/VaultRouter"

    Tx:
      type: object
      required:
        - coins
        - gas
      properties:
        id:
          type: string
          example: "CF524818D42B63D25BBA0CCC4909F127CAA645C0F9CD07324F2824CC151A64C7"
        chain:
          type: string
          example: "BTC"
        from_address:
          type: string
          example: "bcrt1q0s4mg25tu6termrk8egltfyme4q7sg3h8kkydt"
        to_address:
          type: string
          example: "bcrt1qf3s7q037eancht7sg0aj995dht25rwrnqsf45e"
        coins:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
        gas:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
        memo:
          type: string
          example: "ADD:BTC.BTC:thor1zupk5lmc84r2dh738a9g3zscavannjy3nzplwt"

    LastBlock:
      type: object
      required:
        - chain
        - last_observed_in
        - last_signed_out
        - thorchain
      properties:
        chain:
          type: string
        last_observed_in:
          type: integer
          format: int64
        last_signed_out:
          type: integer
          format: int64
        thorchain:
          type: integer
          format: int64

    ObservedTx:
      type: object
      required:
        - tx
      properties:
        tx:
          $ref: "#/components/schemas/Tx"
        status:
          type: string
          enum: ["done", "incomplete"]
          example: "done"
        out_hashes:
          type: array
          items:
            type: string
            example: "E17A0906E015F0C343691C18E475C8CB5F3F6C63F5BCDE0F3A341909763CC92B"
        block_height:
          type: integer
          format: int64
          example: 7581334
          description: the block height of the observed transaction on the source chain, not provided if chain is THOR
        signers:
          type: array
          items:
            type: string
            example: "thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5"
        observed_pub_key:
          type: string
          example: "thorpub1addwnpepq27ck6u44zl8qqdnmzjjc8rg72amrxrsp42p9vd7kt6marhy6ww76z8shwe"
        keysign_ms:
          type: integer
          format: int64
          example: 10000
        finalise_height:
          type: integer
          format: int64
          example: 7581334
          description: the finalised height of the observed transaction on the source chain, not provided if chain is THOR
        aggregator:
          type: string
          description: the outbound aggregator to use, will also match a suffix
          example: "0x69800327b38A4CeF30367Dec3f64c2f2386f3848"
        aggregator_target:
          type: string
          description: the aggregator target asset provided to transferOutAndCall
          example: "0x0a44986b70527154e9F4290eC14e5f0D1C861822"
        aggregator_target_limit:
          type: string
          description: the aggregator target asset limit provided to transferOutAndCall
          example: "0x0a44986b70527154e9F4290eC14e5f0D1C861822"

    TxOutItem:
      type: object
      required:
        - chain
        - to_address
        - coin
        - max_gas
        - height
      properties:
        chain:
          type: string
          example: "ETH"
        to_address:
          type: string
          example: "0x66fb1cd65b97fa40457b90b7d1ca6b92cb64b32b"
        vault_pub_key:
          type: string
          example: "thorpub1addwnpepqt45wmsxj29xpgdrdsvg2h3dx68qeapgykw3hlyj6vuds2r0pnkwx5gt9m4"
        coin:
          $ref: "#/components/schemas/Coin"
        memo:
          type: string
          example: "OUT:208BF0ACD78C89A0534B0457BA0867B101961A2319C1E49DD28676526904BBEA"
        max_gas:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
        gas_rate:
          type: integer
          format: int64
        in_hash:
          type: string
          example: "208BF0ACD78C89A0534B0457BA0867B101961A2319C1E49DD28676526904BBEA"
        out_hash:
          type: string
          example: "0D0B2FDB6DAD6E5FD3C5E46D39128F9DA15E96F0B2CC054CE059EA3532B150FB"
        height:
          type: integer
          format: int64
          example: 1234

    TssMetric:
      type: object
      properties:
        address:
          type: string
        tss_time:
          type: integer
          format: int64

    TssKeysignMetric:
      type: object
      required:
        - node_tss_times
      properties:
        tx_id:
          type: string
        node_tss_times:
          type: array
          items:
            $ref: "#/components/schemas/TssMetric"

    Node:
      type: object
      required:
        - node_address
        - status
        - pub_key_set
        - validator_cons_pub_key
        - bond
        - active_block_height
        - bond_address
        - status_since
        - signer_membership
        - requested_to_leave
        - forced_to_leave
        - leave_height
        - ip_address
        - version
        - slash_points
        - jail
        - current_award
        - observe_chains
        - preflight_status
        - bond_providers
      properties:
        node_address:
          type: string
          example: "thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5"
        status:
          type: string
          enum: ["Active", "Whitelisted", "Standby", "Disabled"]
          example: "Active"
        pub_key_set:
          type: object
          title: NodePubKeySet
          properties:
            secp256k1:
              type: string
              example: "thorpub1addwnpepq27ck6u44zl8qqdnmzjjc8rg72amrxrsp42p9vd7kt6marhy6ww76z8shwe"
            ed25519:
              type: string
              example: "thorpub1addwnpepq27ck6u44zl8qqdnmzjjc8rg72amrxrsp42p9vd7kt6marhy6ww76z8shwe"
        validator_cons_pub_key:
          type: string
          description: the consensus pub key for the node
          example: "thor104gsqwta048e80j909g6y9kkqdjrw0lff866ew"
        bond:
          type: string
          description: current node bond
          example: "123456789"
        active_block_height:
          type: integer
          format: int64
          description: the block height at which the node became active
          example: 123456
        bond_address:
          type: string
          example: "thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5"
        status_since:
          type: integer
          format: int64
          description: the block height of the current provided information for the node
          example: 100000
        signer_membership:
          type: array
          description: the set of vault public keys of which the node is a member
          items:
            type: string
            example: "thorpub1addwnpepq2jqhv5rdqlkusfxy05stfzcgslhhz5qh8pxetw5ry2aa6awgdh3shq8s82"
        requested_to_leave:
          type: boolean
        forced_to_leave:
          type: boolean
          description: indicates whether the node has been forced to leave by the network, typically via ban
        leave_height:
          type: integer
          format: int64
          example: 0
        ip_address:
          type: string
          example: "10.20.30.40"
        version:
          type: string
          description: the currently set version of the node
          example: "0.35.0"
        slash_points:
          type: integer
          format: int64
          description: the accumlated slash points, reset at churn but excessive slash points may carry over
          example: 42
        jail:
          type: object
          title: NodeJail
          properties:
            node_address:
              type: string
              example: "tthor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5"
            release_height:
              type: integer
              format: int64
              example: 1234
            reason:
              type: string
        current_award:
          type: string
          example: "123456"
        observe_chains:
          type: array
          description: the last observed heights for all chain by the node
          items:
            type: object
            title: ChainHeight
            required:
              - chain
              - height
            properties:
              chain:
                type: string
                example: "BTC"
              height:
                type: integer
                format: int64
                example: 2000000
        preflight_status:
          type: object
          title: NodePreflightStatus
          required:
            - status
            - reason
            - code
          properties:
            status:
              type: string
              description: the next status of the node
              example: "Ready"
            reason:
              type: string
              description: the reason for the transition to the next status
              example: "OK"
            code:
              type: integer
              format: int64
              example: 0
        bond_providers:
          type: object
          title: NodeBondProviders
          properties:
            node_address:
              type: string
            node_operator_fee:
              type: string
            providers:
              type: object
              title: NodeBondProvider
              properties:
                bond_address:
                  type: string
                bond:
                  type: string

    KeygenMetric:
      type: object
      required:
        - node_tss_times
      properties:
        pub_key:
          type: string
        node_tss_times:
          type: array
          items:
            type: object
            title: NodeKeygenMetric
            properties:
              address:
                type: string
              tss_time:
                type: string

    ThornameAlias:
      type: object
      properties:
        chain:
          type: string
          example: "BTC"
        address:
          type: string
          example: "bc1qn9esxuw8ca7ts8l6w66kdh800s09msvutydc46"

    Thorname:
      type: object
      required:
        - preferred_asset
        - aliases
      properties:
        name:
          type: string
          example: "thor"
        expire_block_height:
          type: integer
          format: int64
          example: 1234
        owner:
          type: string
          example: "thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5"
        preferred_asset:
          type: string
          example: "BTC.BTC"
        aliases:
          type: array
          items:
            $ref: "#/components/schemas/ThornameAlias"

    # ------------------------------ responses ------------------------------

    PoolResponse:
      $ref: "#/components/schemas/Pool"

    PoolsResponse:
      type: array
      items:
        $ref: "#/components/schemas/Pool"

    LiquidityProviderResponse:
      type: array
      items:
        $ref: "#/components/schemas/LiquidityProvider"

    TxResponse:
      type: object
      properties:
        observed_tx:
          $ref: "#/components/schemas/ObservedTx"
        keysign_metric:
          $ref: "#/components/schemas/TssKeysignMetric"

    TxSignersResponse:
      type: object
      required:
        - tx
        - txs
        - actions
        - out_txs
      properties:
        tx_id:
          type: string
          example: "CF524818D42B63D25BBA0CCC4909F127CAA645C0F9CD07324F2824CC151A64C7"
        tx:
          $ref: "#/components/schemas/ObservedTx"
        height:
          type: integer
          format: int64
          example: 1234
        txs:
          type: array
          items:
            $ref: "#/components/schemas/ObservedTx"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ObservedTx"
        out_txs:
          type: array
          items:
            type: string
        finalised_height:
          type: integer
          format: int64
          example: 7581334
          description: the thorchain height at which the outbound was finalised
        updated_vault:
          type: boolean
          example: false
        reverted:
          type: boolean
          example: false
        outbound_height:
          type: integer
          format: int64
          example: 1234

    NodeResponse:
      $ref: "#/components/schemas/Node"

    NodesResponse:
      type: array
      items:
        $ref: "#/components/schemas/Node"

    VaultsResponse:
      type: array
      items:
        $ref: "#/components/schemas/Vault"

    VaultResponse:
      $ref: "#/components/schemas/Vault"

    VaultPubkeysResponse:
      type: object
      required:
        - asgard
        - yggdrasil
      properties:
        asgard:
          type: array
          items:
            $ref: "#/components/schemas/VaultInfo"
        yggdrasil:
          type: array
          items:
            $ref: "#/components/schemas/VaultInfo"

    NetworkResponse:
      type: object
      required:
        - bond_reward_rune
        - total_bond_units
        - total_reserve
        - burned_bep_2_rune
        - burned_erc_20_rune
      properties:
        bond_reward_rune:
          type: string
          example: "857134475040"
          description: total amount of RUNE awarded to node operators
        total_bond_units:
          type: string
          example: "0"
          description: total bonded RUNE
        total_reserve:
          type: string
          example: "21999180112172346"
          description: total reserve RUNE
        burned_bep_2_rune:
          type: string
          example: "674699077345087"
          description: total of burned BEP2 RUNE
        burned_erc_20_rune:
          type: string
          example: "66369401654835"
          description: total of burned ERC20 RUNE

    POLResponse:
      type: object
      required:
        - rune_deposited
        - rune_withdrawn
        - value
        - pnl
        - current_deposit
      properties:
        rune_deposited:
          type: string
          example: "857134475040"
          description: total amount of RUNE deposited into the pools
        rune_withdrawn:
          type: string
          example: "0"
          description: total amount of RUNE withdrawn from the pools
        value:
          type: string
          example: "21999180112172346"
          description: total value of protocol's LP position in RUNE value
        pnl:
          type: string
          example: "21999180112172346"
          description: profit and loss of protocol owned liquidity
        current_deposit:
          type: string
          example: "21999180112172346"
          description: current amount of rune deposited

    InboundAddressesResponse:
      type: array
      items:
        type: object
        title: InboundAddress
        required:
          - halted
        properties:
          chain:
            type: string
            example: "BTC"
          pub_key:
            type: string
            example: "thorpub1addwnpepq2jqhv5rdqlkusfxy05stfzcgslhhz5qh8pxetw5ry2aa6awgdh3shq8s82"
          address:
            type: string
            example: "bc1qn9esxuw8ca7ts8l6w66kdh800s09msvutydc46"
          router:
            type: string
            example: "0xD37BbE5744D730a1d98d8DC97c42F0Ca46aD7146"
          halted:
            type: boolean
            example: false
            description: Returns true if trading is unavailable for this chain, either because trading is halted globally or specifically for this chain
          global_trading_paused:
            type: boolean
            example: false
            description: "Returns true if trading is paused globally"
          chain_trading_paused:
            type: boolean
            example: false
            description: "Returns true if trading is paused for this chain"
          chain_lp_actions_paused:
            type: boolean
            example: false
            description: "Returns true if LP actions are paused for this chain"
          gas_rate:
            type: string
            example: "214"
            description: "The minimum fee rate used by vaults to send outbound TXs. The actual fee rate may be higher. For EVM chains this is returned in gwei (1e9)."
          gas_rate_units:
            type: string
            example: "satsperbyte"
            description: "Units of the gas_rate."
          outbound_tx_size:
            type: string
            example: "1000"
            description: "Avg size of outbound TXs on each chain. For UTXO chains it may be larger than average, as it takes into account vault consolidation txs, which can have many vouts"
          outbound_fee:
            type: string
            example: "428000"
            description: "The total outbound fee charged to the user for outbound txs in the gas asset of the chain."

    LastBlockResponse:
      type: array
      items:
        $ref: "#/components/schemas/LastBlock"

    VersionResponse:
      type: object
      required:
        - current
        - next
        - querier
      properties:
        current:
          type: string
          example: "0.17.0"
          description: current version
        next:
          type: string
          example: "0.18.0"
          description: next version
        querier:
          type: string
          example: "0.16.0"
          description: querier version

    ConstantsResponse:
      type: object
      properties:
        int64_values:
          type: object
          additionalProperties:
            type: string
          example:
            AsgardSize: 40
            BadValidatorRate: 43200
        bool_values:
          type: object
          additionalProperties:
            type: string
          example:
            StrictBondLiquidityRatio: true
        string_values:
          type: object
          additionalProperties:
            type: string
          example:
            DefaultPoolStatus: Staged

    BanResponse:
      type: object
      properties:
        node_address:
          type: string
          example: "thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5"
        block_height:
          type: integer
          format: int64
        signers:
          type: array
          items:
            type: string
            example: "thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5"

    QueueResponse:
      type: object
      required:
        - swap
        - outbound
        - internal
        - scheduled_outbound_value
      properties:
        swap:
          type: integer
          format: int64
          example: 0
        outbound:
          type: integer
          format: int64
          example: 10
          description: number of signed outbound tx in the queue
        internal:
          type: integer
          format: int64
          example: 0
        scheduled_outbound_value:
          type: string
          description: scheduled outbound value in RUNE

    OutboundResponse:
      type: array
      items:
        $ref: "#/components/schemas/TxOutItem"

    ScheduledResponse:
      type: array
      items:
        $ref: "#/components/schemas/TxOutItem"

    KeysignResponse:
      type: object
      properties:
        keysign:
          type: object
          title: KeysignInfo
          required:
            - tx_array
          properties:
            height:
              type: integer
              format: int64
              description: the block(s) in which a tx out item is scheduled to be signed and moved from the scheduled outbound queue to the outbound queue
            tx_array:
              type: array
              items:
                $ref: "#/components/schemas/TxOutItem"
        signature:
          type: string

    KeygenMetricsResponse:
      type: array
      items:
        $ref: "#/components/schemas/KeygenMetric"

    MetricsResponse:
      type: object
      properties:
        keygen:
          $ref: "#/components/schemas/KeygenMetricsResponse"
        keysign:
          type: object
          title: KeysignMetrics
          properties:
            tx_id:
              type: string
            node_tss_times:
              type: array
              items:
                $ref: "#/components/schemas/TssMetric"

    ThornameResponse:
      type: array
      items:
        $ref: "#/components/schemas/Thorname"

    MimirResponse:
      type: object
      additionalProperties:
        type: string
      example:
        NODEOPERATORFEE: 2000
        NUMBEROFNEWNODESPERCHURN: 2

    MimirNodesResponse:
      type: object
      properties:
        mimirs:
          type: array
          items:
            type: object
            title: MimirVote
            properties:
              key:
                type: string
              value:
                type: integer
                format: int64
              signer:
                type: string
